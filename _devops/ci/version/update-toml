#!/bin/env python
import argparse, sys, os, re

def get_args():
    parser = argparse.ArgumentParser(description='Set the `version` field in a toml file')
    parser.add_argument('toml', help='Path to pyproject.toml')
    parser.add_argument('version', help='Version string to set in toml file')
    return parser.parse_args()

def process_file(file_path, version):
    with open(file_path, 'r') as f:
        txt = f.read()
    regex = re.compile(r"""^version *?= *?['"]([0-9.]+)['"]$""", flags=re.MULTILINE)
    new_txt = regex.sub(f'version = "{version}"', txt)
    return new_txt

def validate_version(version):
    """Return a truthy object if `version` is a valid semantic version string"""
    regex = re.compile(r'^\d+\.\d+\.\d+$')
    match = regex.match(version)
    return match

def main():
    args = get_args()
    if not validate_version(args.version):
        sys.exit('Invalid version string')
    body = process_file(args.toml, args.version)
    print(body)
    
if __name__ == '__main__':
    main()
